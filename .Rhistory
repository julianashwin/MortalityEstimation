ggarrange(bp_2018_plt,bp_1983_plt,bp_1943_plt,bp_1903_plt, nrow = 2, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_examples_alt.pdf", width = 15, height = 8)
rm(bp_df_alt, bp_2018_plt, bp_1983_plt, bp_1943_plt, bp_1903_plt)
"
Add names as well as codes
"
all_codes <- unique(lifetab_5y_df$code)
convert_df <- data.frame(code = all_codes, name = NA)
convert_df$name[which(convert_df$code== "AUS")] <- "Australia"
convert_df$name[which(convert_df$code== "AUT")] <- "Austria"
convert_df$name[which(convert_df$code== "BEL")] <- "Belgium"
convert_df$name[which(convert_df$code== "BGR")] <- "Bulgaria"
convert_df$name[which(convert_df$code== "BLR")] <- "Belarus"
convert_df$name[which(convert_df$code== "CAN")] <- "Canada"
convert_df$name[which(convert_df$code== "CHE")] <- "Switzerland"
convert_df$name[which(convert_df$code== "CHL")] <- "Chile"
convert_df$name[which(convert_df$code== "CZE")] <- "Czechia"
convert_df$name[which(convert_df$code== "DEU")] <- "Germany"
convert_df$name[which(convert_df$code== "DEUTE")] <- "East Germany"
convert_df$name[which(convert_df$code== "DEUTW")] <- "West Germany"
convert_df$name[which(convert_df$code== "DNK")] <- "Denmark"
convert_df$name[which(convert_df$code== "ENW")] <- "England and Wales"
convert_df$name[which(convert_df$code== "ESP")] <- "Spain"
convert_df$name[which(convert_df$code== "EST")] <- "Estonia"
convert_df$name[which(convert_df$code== "FIN")] <- "Finland"
convert_df$name[which(convert_df$code== "FRA")] <- "France"
convert_df$name[which(convert_df$code== "GBR")] <- "United Kingdom"
convert_df$name[which(convert_df$code== "GRC")] <- "Greece"
convert_df$name[which(convert_df$code== "HKG")] <- "Hong Kong"
convert_df$name[which(convert_df$code== "HRV")] <- "Croatia"
convert_df$name[which(convert_df$code== "HUN")] <- "Hungary"
convert_df$name[which(convert_df$code== "IRL")] <- "Ireland"
convert_df$name[which(convert_df$code== "ISL")] <- "Iceland"
convert_df$name[which(convert_df$code== "ISR")] <- "Israel"
convert_df$name[which(convert_df$code== "ITA")] <- "Italy"
convert_df$name[which(convert_df$code== "JPN")] <- "Japan"
convert_df$name[which(convert_df$code== "KOR")] <- "South Korea"
convert_df$name[which(convert_df$code== "LTU")] <- "Lithuania"
convert_df$name[which(convert_df$code== "LUX")] <- "Luxembourg"
convert_df$name[which(convert_df$code== "LVA")] <- "Latvia"
convert_df$name[which(convert_df$code== "NLD")] <- "Netherlands"
convert_df$name[which(convert_df$code== "NOR")] <- "Norway"
#convert_df$name[which(convert_df$code== "NZL")] <- "New Zealand"
convert_df$name[which(convert_df$code== "NZL_NM")] <- "New Zealand (non-Maori)"
convert_df$name[which(convert_df$code== "POL")] <- "Poland"
convert_df$name[which(convert_df$code== "PRT")] <- "Portugal"
convert_df$name[which(convert_df$code== "RUS")] <- "Russia"
convert_df$name[which(convert_df$code== "SCO")] <- "Scotland"
convert_df$name[which(convert_df$code== "SVK")] <- "Slovakia"
convert_df$name[which(convert_df$code== "SVN")] <- "Slovenia"
convert_df$name[which(convert_df$code== "SWE")] <- "Sweden"
convert_df$name[which(convert_df$code== "TWN")] <- "Taiwan"
convert_df$name[which(convert_df$code== "UKR")] <- "Ukraine"
convert_df$name[which(convert_df$code== "USA")] <- "United States of America"
lifetab_5y_export <- merge(lifetab_5y_df, convert_df, by = "code", all.x = TRUE)
lifetab_export <- merge(lifetab_df, convert_df, by = "code", all.x = TRUE)
lifetab_export <- lifetab_export[,c("code", "name", "year", "age",
"mx", "mx_f", "mx_m", "lx", "lx_f", "lx_m",
"ex", "ex_f", "ex_m", "Total", "Male", "Female",
"best_practice", "best_practice_alt")]
lifetab_5y_export <- lifetab_5y_export[,c("code", "name", "years", "year", "age",
"mx", "mx_f", "mx_m", "lx", "lx_f", "lx_m",
"ex", "ex_f", "ex_m", "Total", "Male", "Female",
"best_practice", "best_practice_alt")]
write.csv(lifetab_5y_export, "data/clean/all_lifetab_5y.csv", row.names = FALSE)
write.csv(lifetab_export, "data/clean/all_lifetab_1y.csv", row.names = FALSE)
bp_df <-  lifetab_export[which(lifetab_export$best_practice == 1),]
bp_alt_df <-  lifetab_export[which(lifetab_export$best_practice == 1),]
bp_alt_df <-  lifetab_export[which(lifetab_export$best_practice_alt == 1),]
bp_df <-  lifetab_export[which(lifetab_export$best_practice == 1),]
bp_alt_df <-  lifetab_export[which(lifetab_export$best_practice_alt == 1),]
bp_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice == 1),]
bp_alt_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice_alt == 1),]
bp_df[which(bp_df$age == 70),]
ggplot(bp_df[which(bp_df$age %in% c(0,50,70,80,90)),], aes(x = year)) +
geom_line(aes(y = lx, color = age))
plt_df <- bp_df[which(bp_df$age %in% c(0,50,70,80,90)),]
View(plt_df)
ggplot(bp_df[which(bp_df$age %in% c(0)),], aes(x = year)) +
geom_line(aes(y = lx_f, color = age))
bp_df[which(bp_df$age %in% c(0)),]
plt_df <- bp_df[which(bp_df$age %in% c(0)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
View(plt_df)
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = age))
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = as.factor(age)))
plt_df <- bp_df[which(bp_df$age %in% c(0,50,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = as.factor(age)))
plt_df <- bp_df[which(bp_df$age %in% c(0,10,20,30,40,50,50,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = as.factor(age)))
plt_df <- bp_alt_df[which(bp_alt_df$age %in% c(0,10,20,30,40,50,50,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = as.factor(age)))
plt_df <- bp_df[which(bp_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) +
geom_line(aes(y = ex_f, color = as.factor(age)))
ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice") +
ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_df[which(bp_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_df[which(bp_alt_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_alt_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alterntive)")
ggarrange(bp_rle_plt, bp_alt_rle_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_rle.pdf", width = 15, height = 8)
ggsave("figures/data/best_practice_rle.pdf", width = 12, height = 6)
ggsave("figures/data/best_practice_rle.pdf", width = 10, height = 5)
plt_df <- bp_df[which(bp_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_df[which(bp_alt_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_alt_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alternative)")
ggarrange(bp_rle_plt, bp_alt_rle_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_rle.pdf", width = 10, height = 5)
plt_df <- bp_5y_df[which(bp_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_5y_df[which(bp_alt_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alternative)")
plt_df <- bp_5y_df[which(bp_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_5y_df[which(bp_alt_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_alt_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alternative)")
ggarrange(bp_rle_plt, bp_alt_rle_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_rle.pdf", width = 10, height = 5)
ggarrange(bp_rle_plt, bp_alt_rle_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_rle.pdf", width = 10, height = 5)
write.csv(bp_5y_df, "data/clean/bp_5y.csv", row.names = FALSE)
bp_df <-  lifetab_export[which(lifetab_export$best_practice == 1),]
write.csv(bp_df, "data/clean/bp.csv", row.names = FALSE)
bp_alt_df <-  lifetab_export[which(lifetab_export$best_practice_alt == 1),]
write.csv(bp_alt_df, "data/clean/bp_alt.csv", row.names = FALSE)
bp_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice == 1),]
write.csv(bp_5y_df, "data/clean/bp_5y.csv", row.names = FALSE)
bp_alt_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice_alt == 1),]
write.csv(bp_alt_5y_df, "data/clean/bp_alt_5y.csv", row.names = FALSE)
bp_le_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$age == 0 & lifetab_5y_df$year > 1900 &
lifetab_5y_df$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = code)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_s_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Survival Rate") +
ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Mortality  Rate") +
ggtitle("Mortality Rate")
ggarrange(bp_m_plt,bp_s_plt,bp_le_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_colour_gradientn(colours = terrain.colors(10)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Survival Rate") +
ggtitle("Survival Rate")
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradient(colours = terrain.colors(10)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Survival Rate") +
ggtitle("Survival Rate")
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradient(colours = terrain.colors(10))
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5))
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5)) +
scale_color_continuous(name = "Year")
ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate")
bp_le_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$age == 0 & lifetab_5y_df$year > 1900 &
lifetab_5y_df$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = code)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_s_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_5y_df[which(lifetab_5y_df$best_practice == 1 &
lifetab_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_m_plt,bp_s_plt,bp_le_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_data.pdf", width = 15, height = 4)
ggarrange(bp_m_plt,bp_s_plt,bp_le_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_data.pdf", width = 15, height = 4)
all_codes <- unique(lifetab_5y_df$code)
convert_df <- data.frame(code = all_codes, name = NA)
convert_df$name[which(convert_df$code== "AUS")] <- "Australia"
convert_df$name[which(convert_df$code== "AUT")] <- "Austria"
convert_df$name[which(convert_df$code== "BEL")] <- "Belgium"
convert_df$name[which(convert_df$code== "BGR")] <- "Bulgaria"
convert_df$name[which(convert_df$code== "BLR")] <- "Belarus"
convert_df$name[which(convert_df$code== "CAN")] <- "Canada"
convert_df$name[which(convert_df$code== "CHE")] <- "Switzerland"
convert_df$name[which(convert_df$code== "CHL")] <- "Chile"
convert_df$name[which(convert_df$code== "CZE")] <- "Czechia"
convert_df$name[which(convert_df$code== "DEU")] <- "Germany"
convert_df$name[which(convert_df$code== "DEUTE")] <- "East Germany"
convert_df$name[which(convert_df$code== "DEUTW")] <- "West Germany"
convert_df$name[which(convert_df$code== "DNK")] <- "Denmark"
convert_df$name[which(convert_df$code== "ENW")] <- "England and Wales"
convert_df$name[which(convert_df$code== "ESP")] <- "Spain"
convert_df$name[which(convert_df$code== "EST")] <- "Estonia"
convert_df$name[which(convert_df$code== "FIN")] <- "Finland"
convert_df$name[which(convert_df$code== "FRA")] <- "France"
convert_df$name[which(convert_df$code== "GBR")] <- "United Kingdom"
convert_df$name[which(convert_df$code== "GRC")] <- "Greece"
convert_df$name[which(convert_df$code== "HKG")] <- "Hong Kong"
convert_df$name[which(convert_df$code== "HRV")] <- "Croatia"
convert_df$name[which(convert_df$code== "HUN")] <- "Hungary"
convert_df$name[which(convert_df$code== "IRL")] <- "Ireland"
convert_df$name[which(convert_df$code== "ISL")] <- "Iceland"
convert_df$name[which(convert_df$code== "ISR")] <- "Israel"
convert_df$name[which(convert_df$code== "ITA")] <- "Italy"
convert_df$name[which(convert_df$code== "JPN")] <- "Japan"
convert_df$name[which(convert_df$code== "KOR")] <- "South Korea"
convert_df$name[which(convert_df$code== "LTU")] <- "Lithuania"
convert_df$name[which(convert_df$code== "LUX")] <- "Luxembourg"
convert_df$name[which(convert_df$code== "LVA")] <- "Latvia"
convert_df$name[which(convert_df$code== "NLD")] <- "Netherlands"
convert_df$name[which(convert_df$code== "NOR")] <- "Norway"
#convert_df$name[which(convert_df$code== "NZL")] <- "New Zealand"
convert_df$name[which(convert_df$code== "NZL_NM")] <- "New Zealand (non-Maori)"
convert_df$name[which(convert_df$code== "POL")] <- "Poland"
convert_df$name[which(convert_df$code== "PRT")] <- "Portugal"
convert_df$name[which(convert_df$code== "RUS")] <- "Russia"
convert_df$name[which(convert_df$code== "SCO")] <- "Scotland"
convert_df$name[which(convert_df$code== "SVK")] <- "Slovakia"
convert_df$name[which(convert_df$code== "SVN")] <- "Slovenia"
convert_df$name[which(convert_df$code== "SWE")] <- "Sweden"
convert_df$name[which(convert_df$code== "TWN")] <- "Taiwan"
convert_df$name[which(convert_df$code== "UKR")] <- "Ukraine"
convert_df$name[which(convert_df$code== "USA")] <- "United States of America"
lifetab_5y_export <- merge(lifetab_5y_df, convert_df, by = "code", all.x = TRUE)
lifetab_export <- merge(lifetab_df, convert_df, by = "code", all.x = TRUE)
bp_le_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_le_plt
all_codes <- unique(lifetab_5y_df$code)
convert_df <- data.frame(code = all_codes, name = NA)
convert_df$name[which(convert_df$code== "AUS")] <- "Australia"
convert_df$name[which(convert_df$code== "AUT")] <- "Austria"
convert_df$name[which(convert_df$code== "BEL")] <- "Belgium"
convert_df$name[which(convert_df$code== "BGR")] <- "Bulgaria"
convert_df$name[which(convert_df$code== "BLR")] <- "Belarus"
convert_df$name[which(convert_df$code== "CAN")] <- "Canada"
convert_df$name[which(convert_df$code== "CHE")] <- "Switzerland"
convert_df$name[which(convert_df$code== "CHL")] <- "Chile"
convert_df$name[which(convert_df$code== "CZE")] <- "Czechia"
convert_df$name[which(convert_df$code== "DEU")] <- "Germany"
convert_df$name[which(convert_df$code== "DEUTE")] <- "East Germany"
convert_df$name[which(convert_df$code== "DEUTW")] <- "West Germany"
convert_df$name[which(convert_df$code== "DNK")] <- "Denmark"
convert_df$name[which(convert_df$code== "ENW")] <- "England and Wales"
convert_df$name[which(convert_df$code== "ESP")] <- "Spain"
convert_df$name[which(convert_df$code== "EST")] <- "Estonia"
convert_df$name[which(convert_df$code== "FIN")] <- "Finland"
convert_df$name[which(convert_df$code== "FRA")] <- "France"
convert_df$name[which(convert_df$code== "GBR")] <- "United Kingdom"
convert_df$name[which(convert_df$code== "GRC")] <- "Greece"
convert_df$name[which(convert_df$code== "HKG")] <- "Hong Kong"
convert_df$name[which(convert_df$code== "HRV")] <- "Croatia"
convert_df$name[which(convert_df$code== "HUN")] <- "Hungary"
convert_df$name[which(convert_df$code== "IRL")] <- "Ireland"
convert_df$name[which(convert_df$code== "ISL")] <- "Iceland"
convert_df$name[which(convert_df$code== "ISR")] <- "Israel"
convert_df$name[which(convert_df$code== "ITA")] <- "Italy"
convert_df$name[which(convert_df$code== "JPN")] <- "Japan"
convert_df$name[which(convert_df$code== "KOR")] <- "South Korea"
convert_df$name[which(convert_df$code== "LTU")] <- "Lithuania"
convert_df$name[which(convert_df$code== "LUX")] <- "Luxembourg"
convert_df$name[which(convert_df$code== "LVA")] <- "Latvia"
convert_df$name[which(convert_df$code== "NLD")] <- "Netherlands"
convert_df$name[which(convert_df$code== "NOR")] <- "Norway"
#convert_df$name[which(convert_df$code== "NZL")] <- "New Zealand"
convert_df$name[which(convert_df$code== "NZL_NM")] <- "New Zealand"# (non-Maori)"
convert_df$name[which(convert_df$code== "POL")] <- "Poland"
convert_df$name[which(convert_df$code== "PRT")] <- "Portugal"
convert_df$name[which(convert_df$code== "RUS")] <- "Russia"
convert_df$name[which(convert_df$code== "SCO")] <- "Scotland"
convert_df$name[which(convert_df$code== "SVK")] <- "Slovakia"
convert_df$name[which(convert_df$code== "SVN")] <- "Slovenia"
convert_df$name[which(convert_df$code== "SWE")] <- "Sweden"
convert_df$name[which(convert_df$code== "TWN")] <- "Taiwan"
convert_df$name[which(convert_df$code== "UKR")] <- "Ukraine"
convert_df$name[which(convert_df$code== "USA")] <- "United States of America"
lifetab_5y_export <- merge(lifetab_5y_df, convert_df, by = "code", all.x = TRUE)
lifetab_export <- merge(lifetab_df, convert_df, by = "code", all.x = TRUE)
bp_le_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_s_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_m_plt,bp_s_plt,bp_le_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_data.pdf", width = 15, height = 4)
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(stringr)
require(tidyr)
require(reshape)
require(reshape2)
require(plm)
require(lfe)
require(stargazer)
source("src/siler_fns.R")
"
Define some useful color schemes
"
# Color scheme
col_scheme <- c("Canada" = "pink", "France" = "blue3", "Italy" =  "forestgreen",
"United States" = "cornflowerblue", "West Germany" = "darkgoldenrod2",
"United Kingdom" = "gray", "Japan"= "red","Best Practice"= "black",
"Belgium" = "gold3", "Denmark" = "firebrick4", "Finland" = "darkslategray1",
"Netherlands" = "darkorange1", "Norway" = "deeppink", "Sweden" = "yellow",
"Switzerland" = "darkorchid3", "Iceland" = "cornsilk3")
line_colors <- scale_color_manual("Country", values = col_scheme)
fill_colors <- scale_fill_manual("Country", values = col_scheme)
par_cols <- c("LE Change" = "black", "H Change" = "black", "b" = "blue", "B" =  "purple",
"c" = "red", "C" = "orange", "d" = "green")
par_lines <- scale_color_manual("Parameter", values = par_cols)
par_fills <- scale_fill_manual("Parameter", values = par_cols)
"
Import data and results
"
mult_codes <- FALSE
mult_codes <- FALSE
parests_df <- read.csv("figures/benchmark/siler_i2_params_ber.csv", stringsAsFactors = FALSE)
View(parests_df)
if (mult_codes){
# Shorten USA to United States
parests_df$name[which(parests_df$code == "USA")] <- "United States"
# year = 0 means year should be NA
parests_df$year[which(parests_df$year == 0)] <- NA
#other_parests_df$year[which(other_parests_df$year == 0)] <- NA
# Combine
all_parests_df <- rbind(parests_df)#, other_parests_df)
# Include only countries that have a full sample (plus UK, US and Japan)
full_codes <- names(table(all_parests_df$code)[which(table(all_parests_df$code) == 162)])
full_codes <- c(full_codes, "GBR", "USA", "JPN")
full_parests_df <- all_parests_df[which(all_parests_df$code %in% full_codes),]
} else {
full_parests_df <- parests_df
full_parests_df$code <- "BestPractice"
full_parests_df$name <- "Best Practice"
}
mort_df <- read.csv("data/clean/all_lifetab_5y.csv", stringsAsFactors = FALSE)
mort_df$Hx <- NA
for (code in unique(mort_df$code)){
print(code)
years <- unique(mort_df$year[which(mort_df$code == code)])
for (year in years){
data_obs <- which(mort_df$code == code & mort_df$year == year)
ages <- mort_df$age[data_obs]
LEs <- mort_df$ex[data_obs]
S_data <- mort_df$lx[data_obs]
H_data <- rep(NA, length(ages))
for (ii in 1:length(ages)){
LE_data <- LEs[ii]
S <- S_data[ii:length(ages)]/S_data[ii]
S <- S[S>0]
if (length(S) > 0){
H_data[ii] <- -sum(S*log(S))/LE_data
} else{
H_data[ii] <- 0
}
}
mort_df$Hx[data_obs] <- H_data
}
}
bp_df <- mort_df[which(mort_df$best_practice == 1),]
bp_df$code <- "BestPractice"
bp_df$name <- "Best Practice"
mort_df <- rbind(mort_df, bp_df)
bp_df <- mort_df[which(mort_df$best_practice_alt == 1),]
bp_df$code <- "BestPractice_alt"
bp_df$name <- "Best Practice (alt)"
mort_df <- rbind(mort_df, bp_df)
decomp_df <- full_parests_df[which(!str_detect(full_parests_df$parameter, "_")),
c("code", "name", "year", "parameter", "median")]
decomp_df <- spread(decomp_df, key = c("parameter"), value = c("median"))
decomp_df <- merge(decomp_df, mort_df[which(mort_df$age == 0), c("code", "year", "ex", "Hx")],
by = c("code", "year"))
decomp_df[,c("LE_mod", "H_mod", "LE_b", "LE_B", "LE_c", "LE_C", "LE_d",
"H_b", "H_B", "H_c", "H_C", "H_d")] <- NA
eval_age <- 0
for (code in unique(decomp_df$code)){
print(code)
country_par_df <- all_parests_df[which(all_parests_df$code == code),]
country_par_df <- country_par_df[which(!is.na(country_par_df$year)),]
for (year in unique(country_par_df$year)){
# Get the empirical LE and H
results_obs <- which(decomp_df$code == code & decomp_df$year == year)
pars <- decomp_df[results_obs,c("b", "B", "c", "C", "d", "σ")]
# Model implied S, LE and H
S_eval <- siler_survival(pars, eval_age)
S_mod <- siler_survival(pars, eval_age:200)
LE_mod <- siler_LE(pars, eval_age)
H_mod <- siler_ineq(pars, eval_age)
decomp_df$LE_mod[results_obs] <- LE_mod
decomp_df$H_mod[results_obs] <- H_mod
# LE derivatives
decomp_df$LE_b[results_obs] <- sum(siler_Sb(pars, eval_age:200))
decomp_df$LE_B[results_obs] <- sum(siler_SB(pars, eval_age:200))
decomp_df$LE_c[results_obs] <- sum(siler_Sc(pars, eval_age:200))
decomp_df$LE_C[results_obs] <- sum(siler_SC(pars, eval_age:200))
decomp_df$LE_d[results_obs] <- sum(siler_Sd(pars, eval_age:200))
# H derivatives
decomp_df$H_b[results_obs] <- siler_ineq_theta(LE_mod, sum(siler_Sb(pars, eval_age:200)),
H_mod, siler_Sb(pars, eval_age:200), S_mod)
decomp_df$H_B[results_obs] <- siler_ineq_theta(LE_mod, sum(siler_SB(pars, eval_age:200)),
H_mod, siler_SB(pars, eval_age:200), S_mod)
decomp_df$H_c[results_obs] <- siler_ineq_theta(LE_mod, sum(siler_Sc(pars, eval_age:200)),
H_mod, siler_Sc(pars, eval_age:200), S_mod)
decomp_df$H_C[results_obs] <- siler_ineq_theta(LE_mod, sum(siler_SC(pars, eval_age:200)),
H_mod, siler_SC(pars, eval_age:200), S_mod)
decomp_df$H_d[results_obs] <- siler_ineq_theta(LE_mod, sum(siler_Sd(pars, eval_age:200)),
H_mod, siler_Sd(pars, eval_age:200), S_mod)
}
}
parests_df
View(parests_df)
ggplot(parests_df) + theme_bw() +
geom_density(aes(x = rhat, color = name))
ggplot(parests_df) + theme_bw() +
geom_density(aes(x = rhat, color = parameter))
ggplot(parests_df) + theme_bw() +
geom_density(aes(x = rhat, color = year)) +
line_colors + fill_colors + guides(fill=FALSE) +
ylab("Density") + xlab(expression(hat(R)))
ggsave("figures/benchmark/rhat_convergence.pdf", width = 4, height = 4)
