ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_df[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Mortality  Rate") +
ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
bp_le_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = code)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_export[which(lifetab_export$best_practice == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Survival Rate") +
ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_export[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Mortality  Rate") +
ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
bp_le_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_export[which(lifetab_export$best_practice == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = rainbow(5))) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Survival Rate") +
ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_export[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = rainbow(5))) + ylim(c(0,1)) +
scale_color_continuous(name = "Year") + xlab("Age") + ylab("Mortality  Rate") +
ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
bp_le_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_export[which(lifetab_export$best_practice == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_export[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_continuous(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
bp_le_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_export[which(lifetab_export$best_practice == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_export[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
# Five year intervals
bp_le_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_data.pdf", width = 15, height = 4)
# One year intervals
bp_le_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_export[which(lifetab_export$age == 0 & lifetab_export$year > 1900 &
lifetab_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_export[which(lifetab_export$best_practice == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_export[which(lifetab_df$lifetab_export == 1 &
lifetab_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_data.pdf", width = 15, height = 4)
rm(bp_le_plt, bp_s_plt, bp_m_plt)
lifetab_export <- lifetab_export[,c("code", "name", "year", "age",
"mx", "mx_f", "mx_m", "lx", "lx_f", "lx_m",
"ex", "ex_f", "ex_m", "Hx", "Hx_f", "Hx_m",
"Total", "Male", "Female",
"best_practice", "best_practice_alt")]
lifetab_5y_export <- lifetab_5y_export[,c("code", "name", "years", "year", "age",
"mx", "mx_f", "mx_m", "lx", "lx_f", "lx_m",
"ex", "ex_f", "ex_m", "Hx", "Hx_f", "Hx_m",
"Total", "Male", "Female",
"best_practice", "best_practice_alt")]
write.csv(lifetab_5y_export, "data/clean/all_lifetab_5y.csv", row.names = FALSE)
write.csv(lifetab_export, "data/clean/all_lifetab_1y.csv", row.names = FALSE)
bp_df <-  lifetab_export[which(lifetab_export$best_practice == 1),]
write.csv(bp_df, "data/clean/bp.csv", row.names = FALSE)
bp_alt_df <-  lifetab_export[which(lifetab_export$best_practice_alt == 1),]
write.csv(bp_alt_df, "data/clean/bp_alt.csv", row.names = FALSE)
bp_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice == 1),]
write.csv(bp_5y_df, "data/clean/bp_5y.csv", row.names = FALSE)
bp_alt_5y_df <-  lifetab_5y_export[which(lifetab_5y_export$best_practice_alt == 1),]
write.csv(bp_alt_5y_df, "data/clean/bp_alt_5y.csv", row.names = FALSE)
plt_df <- bp_df[which(bp_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_df[which(bp_alt_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_alt_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alternative)")
plt_df <- bp_5y_df[which(bp_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice")
plt_df <- bp_alt_5y_df[which(bp_alt_5y_df$age %in% c(0,10,20,30,40,50,60,70,80,90)),]
plt_df <- plt_df[order(plt_df$year, plt_df$age),]
bp_alt_rle_plt <- ggplot(plt_df, aes(x = year)) + theme_bw() +
geom_line(aes(y = ex_f, color = as.factor(age))) +
scale_color_discrete(name = "Age") +
xlab("Year") + ylab("Remaining LE") + ggtitle("Best practice (alternative)")
ggarrange(bp_rle_plt, bp_alt_rle_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_rle.pdf", width = 10, height = 5)
rm(bp_rle_plt, bp_alt_rle_plt)
mort_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
LEgrad_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(HMDHFDplus)
require(stringr)
require(plyr)
LEgrad_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year")
bp_s_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("LE[C]") + ggtitle("Gradient of LE wrt C[t]")
bp_s_plt
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab(expression("LE[C]")) +
ggtitle(expression"Gradient of LE wrt C[t]"))
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab(expression("LE[C]")) +
ggtitle(expression("Gradient of LE wrt C[t]"))
expression("LE[C]")
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab(expression(LE[C])) +
ggtitle(expression("Gradient of LE wrt C[t]"))
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab(expression(LE[C])) +
ggtitle(expression(Gradient of LE wrt C[t]))
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab(expression(LE[C])) +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(HMDHFDplus)
require(stringr)
require(plyr)
LEgrad_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt nrow = 1, ncol=2, common.legend = FALSE)
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(HMDHFDplus)
require(stringr)
require(plyr)
LEgrad_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = FALSE)
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(HMDHFDplus)
require(stringr)
require(plyr)
LEgrad_df <- read.csv("figures/benchmark/siler_i2_cov_LEgrads.csv", stringsAsFactors = FALSE)
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE)
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) + ylim(c(0,max(LEgrad_df$LE_cs))) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE)
?ggarrange
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE)
hline
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE)
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
folder <- "figures/benchmark/"
ggsave(paste0(folder,"LE_grads.pdf", width = 10, height = 4)
ggsave(paste0(folder,"LEgrads_cC.pdf"), width = 10, height = 4)
bp_leB_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Bs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~B[t]))
bp_leb_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_bs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~b[t]))
ggarrange(bp_leb_plt, bp_leB_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
folder <- "figures/benchmark/"
LEgrad_df <- read.csv(paste0(folder,"siler_i2_cov_LEgrads.csv"), stringsAsFactors = FALSE)
LEgrad_df$line <- "Estimate"
LEgrad_df$line[which(LEgrad_df$year > 2020)] <- "Forecast"
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year,
linetype = line)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
folder <- "figures/benchmark/"
LEgrad_df <- read.csv(paste0(folder,"siler_i2_cov_LEgrads.csv"), stringsAsFactors = FALSE)
LEgrad_df$Type <- "Estimate"
LEgrad_df$Type[which(LEgrad_df$year > 2020)] <- "Forecast"
bp_leC_plt <-
ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year,
linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_leC_plt
bp_leC_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
ggarrange(bp_lec_plt, bp_leC_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
ggsave(paste0(folder,"LEgrads_cC.pdf"), width = 10, height = 4)
bp_leB_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~B[t]))
bp_leb_plt <- ggplot(LEgrad_df) + theme_bw() +
geom_line(aes(x = age, y = LE_bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~b[t]))
ggarrange(bp_leb_plt, bp_leB_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
bp_leB_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 10),]) + theme_bw() +
geom_line(aes(x = age, y = LE_Bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~B[t]))
bp_leb_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 10),]) + theme_bw() +
geom_line(aes(x = age, y = LE_bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~b[t]))
ggarrange(bp_leb_plt, bp_leB_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
bp_leB_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 6),]) + theme_bw() +
geom_line(aes(x = age, y = LE_Bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~B[t]))
bp_leb_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 6),]) + theme_bw() +
geom_line(aes(x = age, y = LE_bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~b[t]))
ggarrange(bp_leb_plt, bp_leB_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
bp_leB_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 5),]) + theme_bw() +
geom_line(aes(x = age, y = LE_Bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~B[t]))
bp_leb_plt <- ggplot(LEgrad_df[which(LEgrad_df$age < 5),]) + theme_bw() +
geom_line(aes(x = age, y = LE_bs, group = year, color = year, linetype = Type)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~b[t]))
ggarrange(bp_leb_plt, bp_leB_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
lifetab_5y_export <- read.csv("data/clean/all_lifetab_5y.csv", stringsAsFactors = FALSE)
ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_le_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_s_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Survival Rate") + ggtitle("Survival Rate")
bp_m_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$best_practice == 1 &
lifetab_5y_export$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) + ylim(c(0,1)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Mortality  Rate") + ggtitle("Mortality Rate")
ggarrange(bp_s_plt,bp_le_plt, bp_h_plt, nrow = 1, ncol=3, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_Hvh.pdf", width = 15, height = 4)
ggarrange(bp_H_plt, bp_h_plt, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_Hvh.pdf", width = 10, height = 4)
ggarrange(bp_H_plt, bp_h_plt, nrow = 1, ncol=2, common.legend = TRUE, legend = "right")
bp_H_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = Hx_f), method = "loess") +
geom_point(aes(x = year, y = Hx_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Inequality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_H_plt <- ggplot(lifetab_5y_export[which(lifetab_5y_export$age == 0 & lifetab_5y_export$year > 1900 &
lifetab_5y_export$best_practice == 1),]) + theme_bw() +
geom_smooth(aes(x = year, y = Hx_f), method = "loess") +
geom_point(aes(x = year, y = Hx_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Inequality") +
xlab("Year") + ylab("Lifespan Inequality at birth")
ggarrange(bp_H_plt, bp_h_plt, nrow = 1, ncol=2, common.legend = TRUE, legend = "right")
ggsave("figures/data/best_practice_5y_Hvh.pdf", width = 10, height = 4)
