geom_line(aes(x = age, y = lx_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") + ylim(c(0,1)) +
xlab("Age") + ylab("Survival rate") + ggtitle("Survival")
bp_le_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = ex_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Remaining life expectancy") + ggtitle("Life expectancy")
bp_le_plt
bp_m_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") + ylim(c(0,1)) +
xlab("Age") + ylab("Mortality rate") + ggtitle("Mortality")
# Survival
bp_s_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") + ylim(c(0,1)) +
xlab("Age") + ylab("Survival rate") + ggtitle("Survival")
# Life expectancy
bp_le_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = ex_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Remaining life expectancy") + ggtitle("Life expectancy")
bp_h_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = -log(Hx_f), group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Remaining lifespan equality") + ggtitle("Lifespan equality")
names(bp_5y_df)
ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = -log(Hx_f), group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Remaining lifespan equality") + ggtitle("Lifespan equality")
ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = l_99p9_f, method = "loess") +
geom_point(aes(x = year, y = l_99p9_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_lstar_plt <- ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = l_99p9_f), method = "loess") +
geom_point(aes(x = year, y = l_99p9_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_lstar_plt
plt2 <- ggarrange(bp_le_plt, bp_h_plt, bp_lstar_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
plt2
bp_le_plt <- ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = ex_f), method = "lm") +
geom_point(aes(x = year, y = ex_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Life Expectancy") +
xlab("Year") + ylab("Life Expectancy at birth")
bp_h_plt <- ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = -log(Hx_f)), method = "loess") +
geom_point(aes(x = year, y = -log(Hx_f), color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
bp_lstar_plt <- ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = l_99p9_f), method = "loess") +
geom_point(aes(x = year, y = l_99p9_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan Equality") +
xlab("Year") + ylab("Lifespan Equality at birth")
plt2 <- ggarrange(bp_le_plt, bp_h_plt, bp_lstar_plt, nrow = 1, ncol=3, common.legend = TRUE,
legend = "right")
plt2
bp_m_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = mx_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") + ylim(c(0,1)) +
xlab("Age") + ylab("Mortality rate") + ggtitle("Mortality")
# Survival
bp_s_plt <- ggplot(bp_5y_df[which(bp_5y_df$year > 1900),]) + theme_bw() +
geom_line(aes(x = age, y = lx_f, group = year, color = year)) +
scale_color_gradientn(colours = rainbow(5), name = "Year") + ylim(c(0,1)) +
xlab("Age") + ylab("Survival rate") + ggtitle("Survival")
plt1 <- ggarrange(bp_m_plt, bp_s_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "left")
ggarrange(plt1, plt2, nrow = 1, ncol=2, common.legend = FALSE)
bp_lstar_plt <- ggplot(bp_5y_df[which(bp_5y_df$age == 0 & bp_5y_df$year > 1900),]) + theme_bw() +
geom_smooth(aes(x = year, y = l_99p9_f), method = "loess") +
geom_point(aes(x = year, y = l_99p9_f, color = name)) +
scale_color_discrete(name = "Country") + ggtitle("Lifespan (99.9%)") +
xlab("Year") + ylab("Lifespan")
plt2 <- ggarrange(bp_le_plt, bp_h_plt, bp_lstar_plt, nrow = 1, ncol=3, common.legend = TRUE,
legend = "right")
ggarrange(plt1, plt2, nrow = 1, ncol=2, common.legend = FALSE)
ggsave("figures/data/best_practice_5y_summary.pdf", width = 16, height = 4)
setwd("/Users/julianashwin/Documents/GitHub/MortalityEstimation/")
rm(list=ls())
require(ggplot2)
require(ggpubr)
require(HMDHFDplus)
require(stringr)
require(plyr)
require(zoo)
require(reshape2)
folder <- "figures/benchmark/"
LEgrad_df <- read.csv(paste0(folder,"siler_i2drift_LEgrads.csv"), stringsAsFactors = FALSE)
LEgrad_df$Forecast <- "Estimate"
LEgrad_df$Forecast[which(LEgrad_df$year > 2020)] <- "Forecast"
LEgrad_df$code <- "Best Practice"
bp_df <- LEgrad_df
# Import gradients for each country
import_files <- dir("figures/countries/")
import_files <- import_files[which(str_detect(import_files, "_LEgrads.csv"))]
for (ii in 1:length(import_files)){
filename <- import_files[ii]
country_df <- read.csv(paste0("figures/countries/", filename), stringsAsFactors = F)
country_df$Forecast <- "Estimate"
country_df$Forecast[which(country_df$year > 2020)] <- "Forecast"
country_df$code <- str_remove(filename, "_i2_LEgrads.csv")
country_df <- country_df[,names(LEgrad_df)]
LEgrad_df <- rbind(LEgrad_df, country_df)
}
rm(country_df)
econ_panel_df <- read.csv("data/results/econ_panel.csv", stringsAsFactors = FALSE)
# Merge in full names
mort_df <- read.csv("data/clean/all_lifetab_5y.csv", stringsAsFactors = FALSE)
mort_df <- mort_df[which(mort_df$age == 0),]
LEgrad_df <- merge(LEgrad_df, unique(mort_df[,c("code", "name")]), by = "code")
LEgrad_df <- LEgrad_df[which(LEgrad_df$year > 0),]
LEgrad_df$code <- str_replace(LEgrad_df$code, "NZL_NM", "NZL")
temp_df <- LEgrad_df[LEgrad_df$code == "USA",]
col_scheme <- c("Other" = "gray",
"Australia" = "darkolivegreen4",
"Canada" = "pink",
"France" = "blue3", "United Kingdom" = "darkgoldenrod4",
"Hong Kong" = "lightgoldenrod",
"Italy" = "forestgreen",
"Japan" = "red","New Zealand" = "black", "Russia" = "firebrick",
"Sweden" = "yellow", "United States of America" = "cornflowerblue",
"Best Practice" = "darkmagenta")
plot_df <- LEgrad_df[which(LEgrad_df$year > 1900),]
extra_obs <- plot_df[which((plot_df$year == 2018 & !(plot_df$code %in% c("NZL","RUS")))|
(plot_df$year == 2013 & plot_df$code %in% c("NZL","RUS"))),]
extra_obs$Forecast <- "Forecast"
plot_df <- rbind(plot_df, extra_obs)
plot_df$name[which(!(plot_df$name %in% names(col_scheme)))] <- "Other"
# Include some years as labels
plot_df$year_label <- NA
plot_df$year_label[which(plot_df$year==1903)] <- 1903
plot_df$year_label[which(plot_df$year==1933)] <- 1933
plot_df$year_label[which(plot_df$year==1963)] <- 1963
plot_df$year_label[which(plot_df$year==1993)] <- 1993
plot_df$year_label[which(plot_df$year==2023)] <- 2023
plot_df <- plot_df[order(plot_df$code, plot_df$year),]
plot_df$LE0 <- plot_df$LE
plot_df$LE0[which(plot_df$age != 0)] <- NA
plot_df <- plot_df[order(plot_df$code, plot_df$year, plot_df$age),]
plot_df$LE0 <- na.locf(plot_df$LE0, fromLast = FALSE)
temp_df <- plot_df[plot_df$age %in% c(0, 80),]
temp_df <- merge(temp_df, econ_panel_df[,c("code", "year", "c", "C")], by = c("code", "year"),
all.x = T)
temp_df <- temp_df[,c("code", "year", "age", "LE", "Lstar", "c", "C")]
temp_df <- temp_df[!duplicated(temp_df),]
temp_df <- data.frame(pivot_wider(temp_df, id_cols = c(code, year,Lstar, c, C) ,
names_from = age, names_glue = "{.value}_{age}",
values_from = c(LE)))
temp_df <- data.frame(pivot_wider(temp_df, id_cols = c( year) ,
names_from = code, names_glue = "{code}_{.value}",
values_from = c( Lstar, c, C, LE_0, LE_80)))
rm(temp_df)
plot_df1 <- plot_df[plot_df$age %in% c(0, 50,70,80),]
ggplot(plot_df1) + theme_bw() +
scale_color_manual("Country", values = col_scheme) +
geom_path(data = plot_df1[which(plot_df1$name == "Other"),], alpha = 0.5,
aes(x = LE0, y = h, group = interaction(code, Forecast),
color = name, linetype = Forecast)) +
geom_path(data = plot_df1[which(plot_df1$name != "Other"),],
aes(x = LE0, y = h, group = interaction(code, Forecast),
color = name, linetype = Forecast)) +
geom_text(data = plot_df1[which(plot_df1$name != "Other"),],
aes(x = LE0, y = h, color = name, label = year_label), show.legend=FALSE, size = 1) +
xlab("LE(0)") + ylab("h(age)") + guides(color=guide_legend(ncol=2)) +
facet_grid(.~age)
plot_df <- LEgrad_df[which(LEgrad_df$code %in% c("JPN", "USA", "FRA") &
LEgrad_df$age < 121 & LEgrad_df$year >= 1903),]
ggplot(plot_df) + theme_bw() +
geom_line(aes(x = age, y = h, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
facet_grid(.~code)
bp_leC_plt <- ggplot(bp_df) + theme_bw() +
geom_line(aes(x = age, y = LE_Cs, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~C[t]))
bp_lec_plt <- ggplot(bp_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cs, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~LE~wrt~c[t]))
bp_lecC_plt <- ggplot(bp_df) + theme_bw() +
geom_line(aes(x = age, y = LE_cC, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Cross-derivative") +
ggtitle(expression(Cross~derivative~of~LE~wrt~c[t]~and~C[t]))
ggarrange(bp_lec_plt, bp_leC_plt, bp_lecC_plt, nrow = 1, ncol=3, common.legend = TRUE,
legend = "right")
bp_hC_plt <- ggplot(bp_df[bp_df$age <111,]) + theme_bw() +
geom_line(aes(x = age, y = h_Cs, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~h~wrt~C[t]))
bp_hc_plt <- ggplot(bp_df[bp_df$age <111,]) + theme_bw() +
geom_line(aes(x = age, y = h_cs, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Gradient") +
ggtitle(expression(Gradient~of~h~wrt~c[t]))
bp_hcC_plt <- ggplot(bp_df[bp_df$age <111,]) + theme_bw() +
geom_line(aes(x = age, y = h_cC, group = year, color = year, linetype = Forecast)) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
scale_color_gradientn(colours = rainbow(5), name = "Year") +
xlab("Age") + ylab("Cross-derivative") + ylim(c(-3,0.36)) +
ggtitle(expression(Cross~derivative~of~h~wrt~c[t]~and~C[t]))
ggarrange(bp_hc_plt, bp_hC_plt, bp_hcC_plt, nrow = 1, ncol=3, common.legend = TRUE,
legend = "right")
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_color_manual("Gradient w.r.t.", values = c("c" = "blue", "C" = "forestgreen")) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs, color = "C")) +
geom_line(aes(x = year, y = LE_cs/max(LE_cs), color = "c")) +
scale_y_continuous(expression(LE[C]~at~birth), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth)))
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_color_manual("Gradient w.r.t.", values = c("c" = "blue", "C" = "forestgreen")) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs, color = "C")) +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs)), color = "c")) +
scale_y_continuous(expression(h[C]~at~birth), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth)))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_color_manual("Gradient w.r.t.", values = c("c" = "blue", "C" = "forestgreen")) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs, linetype = "solid")) +
geom_line(aes(x = year, y = LE_cs/max(LE_cs), linetype = "dashed")) +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_color_manual("Gradient w.r.t.", values = c("c" = "blue", "C" = "forestgreen")) +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/max(LE_cs)), linetype = "dashed") +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/max(LE_cs)), linetype = "dashed") +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
# Actual max of h_cs is around 10
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs, linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs)), linetype = "solid") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/max(LE_cs)), linetype = "dashed") +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
# Actual max of h_cs is around 10
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs)), linetype = "solid") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, common.legend = TRUE,
legend = "right")
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, legend = FALSE)
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs)), linetype = "solid") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs))), linetype = "solid") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, legend = FALSE)
hgrad_plt
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs))), linetype = "solid") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
hgrad_plt
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs))), linetype = "dashed") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
hgrad_plt
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs/Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/cs), linetype = "dashed")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dashed", color = "black") +
geom_line(aes(x = year, y = LE_Cs/C), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/c), linetype = "dashed")
names(plot_df)
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs), linetype = "dashed")
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/max(LE_cs)), linetype = "dashed") +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
# Actual max of h_cs is around 10
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs))), linetype = "dashed") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, legend = FALSE)
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
table(econ_panel_df$name)
names(bp_df)
LEgrad_plt
names(LEgrad_df)
bp_pars_df <- read.csv("figures/benchmark/siler_i2drift_preds.csv", stringsAsFactors = F)
names(bp_pars_df)
bp_pars_df <- bp_pars_df[which(bp_pars_df$parameter %in% c("c", "C")),]
bp_pars_df <- bp_pars_df[which(bp_pars_df$parameter %in% c("c", "C") &
bp_pars_df$year < 2020),]
bp_pars_df <- data.frame(pivot_wider(bp_pars_df, id_cols = c(year), names_from = parameter,
values_from = c(median)))
View(bp_pars_df)
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
plot_df <- merge(plot_df, bp_pars_df, by = "year")
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
plot_df <- merge(plot_df, bp_pars_df, by = "year")
View(plot_df)
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black")
LEgrad_plt
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs/C), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/c), linetype = "dashed")
LEgrad_plt <-
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = C), linetype = "solid") +
geom_line(aes(x = year, y = c), linetype = "dashed")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = C), linetype = "solid") +
geom_line(aes(x = year, y = c), linetype = "dashed")
names(plot_df)
LEgrad_plt <-
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(c/LE)), linetype = "solid")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(c/LE)), linetype = "solid")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(C/LE)), linetype = "solid")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(C/LE)), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs*(c/LE)), linetype = "dashed")
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs, linetype = "Elasticity wrt C")) +
geom_line(aes(x = year, y = LE_cs/max(LE_cs), linetype = "Elasticity wrt c"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "solid")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "dashed"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, linetype="dotted", color = "black") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "Elasticity wrt C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "Elasticity wrt c"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "Elasticity wrt C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "Elasticity wrt c"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Legend", values = c("Elasticity wrt C" = "solid",
"Elasticity wrt c" = "dashed"))
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "Elasticity wrt C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "Elasticity wrt c"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Legend", values = c("Elasticity wrt C" = "solid",
"Elasticity wrt c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "Elasticity wrt C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "Elasticity wrt c"))
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c"))
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c")) +
ylabel("Elasticity of Life Expectancy at birth")
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c")) +
ylab("Elasticity of Life Expectancy at birth")
LEgrad_plt
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs), linetype = "solid") +
geom_line(aes(x = year, y = LE_cs/max(LE_cs)), linetype = "dashed") +
scale_y_continuous(expression(LE[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *max(plot_df$LE_cs), name = expression(LE[c]~at~birth~(dashed))))
# Actual max of h_cs is around 10
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = h_Cs), linetype = "solid") +
geom_line(aes(x = year, y = h_cs*(max(h_Cs)/max(h_cs))), linetype = "dashed") +
scale_y_continuous(expression(h[C]~at~birth~(solid)), sec.axis = sec_axis(
~ . *(max(plot_df$h_Cs)/max(plot_df$h_cs)), name = expression(h[c]~at~birth~(dashed))))
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, legend = FALSE)
ggsave("figures/benchmark/LEgrad_hgrad_birth.pdf", width = 8, height = 4)
bp_pars_df <- read.csv("figures/benchmark/siler_i2drift_preds.csv", stringsAsFactors = F)
bp_pars_df <- bp_pars_df[which(bp_pars_df$parameter %in% c("c", "C") &
bp_pars_df$year < 2020),]
bp_pars_df <- data.frame(pivot_wider(bp_pars_df, id_cols = c(year), names_from = parameter,
values_from = c(median)))
plot_df <- bp_df[which(bp_df$age == 0 & bp_df$Forecast == "Estimate"),]
plot_df <- merge(plot_df, bp_pars_df, by = "year")
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c")) +
ylab("Elasticity of Life Expectancy at birth")
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = h_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = h_cs*(c/LE), linetype = "c")) +
ylab("Elasticity of Lifespan Equality at birth")
ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = h_Cs*(C/h), linetype = "C")) +
geom_line(aes(x = year, y = h_cs*(c/h), linetype = "c")) +
ylab("Elasticity of Lifespan Equality at birth")
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, legend = FALSE)
ggarrange(LEgrad_plt, hgrad_plt, nrow = 1, ncol=2, common.legend = TRUE, legend = "right")
LEgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c")) +
ylab("Elasticity of Life Expectancy at birth")
# h elasticity
hgrad_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = h_Cs*(C/h), linetype = "C")) +
geom_line(aes(x = year, y = h_cs*(c/h), linetype = "c")) +
ylab("Elasticity of Lifespan Equality at birth")
LEelas_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = LE_Cs*(C/LE), linetype = "C")) +
geom_line(aes(x = year, y = LE_cs*(c/LE), linetype = "c")) +
ylab("Elasticity of Life Expectancy at birth")
# h elasticity
helas_plt <- ggplot(plot_df) + theme_bw() + xlab("Year") +
scale_linetype_manual("Elasticity wrt ", values = c("C" = "solid",
"c" = "dashed")) +
geom_hline(yintercept=0, color = "gray") +
geom_line(aes(x = year, y = h_Cs*(C/h), linetype = "C")) +
geom_line(aes(x = year, y = h_cs*(c/h), linetype = "c")) +
ylab("Elasticity of Lifespan Equality at birth")
ggarrange(LEelas_plt, helas_plt, nrow = 1, ncol=2, common.legend = TRUE, legend = "right")
ggsave("figures/benchmark/LEelas_helas_birth.pdf", width = 8, height = 4)
